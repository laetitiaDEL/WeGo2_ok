<?php

namespace ContainerNrdBc74;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getOutingControlleraddService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private '.service_locator.dZ0hwMT.App\Controller\OutingController::add()' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->privates['.service_locator.dZ0hwMT.App\\Controller\\OutingController::add()'] = (new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'activityRepository' => ['privates', 'App\\Repository\\ActivityRepository', 'getActivityRepositoryService', true],
            'apiRegister' => ['privates', 'App\\Service\\ApiRegister', 'getApiRegisterService', true],
            'entityManagerInterface' => ['services', 'doctrine.orm.default_entity_manager', 'getDoctrine_Orm_DefaultEntityManagerService', true],
            'outingRepository' => ['privates', 'App\\Repository\\OutingRepository', 'getOutingRepositoryService', true],
            'serializerInterface' => ['privates', 'serializer', 'getSerializerService', false],
            'userRepository' => ['privates', 'App\\Repository\\UserRepository', 'getUserRepositoryService', true],
        ], [
            'activityRepository' => 'App\\Repository\\ActivityRepository',
            'apiRegister' => 'App\\Service\\ApiRegister',
            'entityManagerInterface' => '?',
            'outingRepository' => 'App\\Repository\\OutingRepository',
            'serializerInterface' => '?',
            'userRepository' => 'App\\Repository\\UserRepository',
        ]))->withContext('App\\Controller\\OutingController::add()', $container);
    }
}
